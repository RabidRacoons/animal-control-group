name: animal-control-group

on:
  push:
    branches: [master]
    
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      GitHubPackageFeedUrl: https://nuget.pkg.github.com/RabidRacoons/index.json
      LogicProjectPath: ${{ github.WORKSPACE }}/AnimalAdoption.Common.Logic

    steps:
      - uses: actions/checkout@v2
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
          source-url: ${{ env.GitHubPackageFeedUrl }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub automatically creates a GITHUB_TOKEN secret to use in your workflow

      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build --no-restore
      
      - name: Test
        run: dotnet test 'AnimalAdoption.Web.Portal.UnitTests/AnimalAdoption.Web.Portal.UnitTests.csproj' --no-build --verbosity normal

      - name: Publish
        run: dotnet publish AnimalAdoption.Web.Portal -c release -o deploy

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: RabidRacoons Package
          path: ${{ env.Wap_Project_Directory }}\deploy

      - name: Upload ARM Template artifact
        uses: actions/upload-artifact@v2
        with:
          name: ARM Template
          path: ./deploy.json
          
      - name: Package up project
        run: dotnet pack --configuration Release ${{ env.LogicProjectPath }}

      - name: Push package to GitHub registry
        run: dotnet nuget push ${{ env.LogicProjectPath }}/**/*.nupkg --skip-duplicate


  deploy:
    runs-on: ubuntu-latest
    needs: [build]

    steps: 
      - name: Downloading
        uses: actions/download-artifact@v2
        with: 
         name: RabidRacoons Package

      - name: Downloading ARM Template
        uses: actions/download-artifact@v2
        with: 
         name: ARM Template
         
      - name: Azure Login
        uses: Azure/login@v1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          
          
      - name: retriveAZSecrets
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: 'dev-animal-web-app-kv' 
          secrets: 'GlobalPassword'
        id: myGlobalPassword  
      
      - name: Update settings
        uses: azure/appservice-settings@v1
        with:
          app-name: 'dev-animal-web-app'
          # slot-name: 'staging'  # Optional and needed only if the settings have to be configured on the specific deployment slot
          app-settings-json: '[{ "name": "GlobalPassword", "value": "${{steps.myGlobalPassword.outputs.GlobalPassword}}", "slotSetting": false },{ "name": "SimulatedFailureChance", "value": "0", "slotSetting": false }]' 
          # connection-strings-json: '${{ secrets.CONNECTION_STRINGS }}'
          general-settings-json: '{"alwaysOn": "false", "webSocketsEnabled": "true"}' #'General configuration settings as Key Value pairs'
        id: settings
        
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
         app-name: dev-animal-web-app
         # publish-profile: ${{ secrets.DEV_PUBLISH_PROFILE }}

      - name: Deploy Azure Resource Manager (ARM) Template
        uses: Azure/arm-deploy@v1
        with:
          # Provide the scope of the deployment. Valid values are: 'resourcegroup', 'managementgroup', 'subscription'
          scope: 'resourcegroup'
          # Override the Subscription Id set by Azure Login.
          subscriptionId: 'cfe96ac1-4cd0-40ad-9751-b18802bf8822'
          # Specify the Id for the Management Group, only required for Management Group Deployments.
          # managementGroupId: # optional
          # Provide the target region, only required for management Group or Subscription deployments.
          # region: # optional
          # Provide the name of a resource group, only required for resource Group deployments.
          resourceGroupName: 'DevOps-2021-03-18-team-01-dev'
          # Specify the path or URL to the Azure Resource Manager template.
          template: ./deploy.json
          # Incremental (only add resources to resource group) or Complete (remove extra resources from resource group) or Validate (only validates the template).
          deploymentMode: incremental
          # Specifies the name of the resource group deployment to create.
          # deploymentName: # optional
          # Supply deployment parameter values.
          parameters: 
            resourceLocation=southeastasia
            tenantGuid=ab5eb3d0-6067-40ee-b4c0-a2ce05dbf039
            appServicePlanName=ASP-DevOps20210318team01dev-b285
            keyVaultName=dev-animal-web-app-kv
            webAppName=dev-animal-web-app
            resourceGroupServicePrincipalManagedApplicationObjectId=7cee5d52-fe1e-4e28-a327-f8eff079a321
          
       
